name: Build, Test, and Release to GHCR

on:
  push:
    branches: [main]

  workflow_dispatch: {}

  schedule:
    - cron: "0 6 * * *"  # Daily at 06:00 UTC

jobs:
  check-duckdb-version:
    name: Get DuckDB Version
    runs-on: ubuntu-latest
    outputs:
      duckdb_version: ${{ steps.getver.outputs.version }}
      already_released: ${{ steps.checkrelease.outputs.found || 'false' }}
    steps:
      - name: Fetch latest DuckDB version from PyPI
        id: getver
        run: |
          version=$(curl -s https://pypi.org/pypi/duckdb/json | jq -r .info.version)
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Check if release exists
        if: github.event_name == 'schedule'
        id: checkrelease
        run: |
          version=${{ steps.getver.outputs.version }}
          if curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              https://api.github.com/repos/${{ github.repository }}/releases/tags/v$version | grep -q '"tag_name":'; then
            echo "found=true" >> $GITHUB_OUTPUT
          else
            echo "found=false" >> $GITHUB_OUTPUT

  build-test-release:
    name: Build, Test, and Push
    needs: check-duckdb-version
    if: github.event_name != 'schedule' || needs.check-duckdb-version.outputs.already_released == 'false'
    runs-on: ubuntu-latest
    env:
      DUCKDB_VERSION: ${{ needs.check-duckdb-version.outputs.duckdb_version }}
      IMAGE_NAME: ghcr.io/${{ github.repository }}

    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install test dependencies
        run: |
          pip install -r requirements.txt
          pip install parse-wkb

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        run: |
          docker build --build-arg DUCKDB_VERSION=$DUCKDB_VERSION -t $IMAGE_NAME:$DUCKDB_VERSION .
          docker tag $IMAGE_NAME:$DUCKDB_VERSION duckdb-http-api:text-base

      - name: Run tests in container
        run: |
          docker build -f Dockerfile.test -t duckdb-http-api:test .
          pytest tests/

      - name: Push Docker image
        run: |
          docker tag $IMAGE_NAME:$DUCKDB_VERSION $IMAGE_NAME:latest
          docker push $IMAGE_NAME:$DUCKDB_VERSION
          docker push $IMAGE_NAME:latest

      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.DUCKDB_VERSION }}
          name: "DuckDB ${{ env.DUCKDB_VERSION }}"
          body: |
            Docker image built with DuckDB `${{ env.DUCKDB_VERSION }}`.
            Published via GitHub Actions.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

